(1) Data types :
A data type is an attribute of data which tells the compiler (or interpreter) how the programmer intends to use the data.

    Primitive: basic building block (boolean, integer, float, char etc.)
    Composite: any data type (struct, array, string etc.) composed of primitives or composite types.
    Abstract: data type that is defined by its behaviour (tuple, set, stack, queue, graph etc).
		
(2):
Programs= algorithms + data structures

Data structures=related data + allowed operations on that data

Storage of data can be carried out in two ways. The data structures can be divided into:

    Linear data structure:These are the types of structures where the storage of data takes place SEQUENTIALLY or in a LINEAR fashion.
		Here, every element stored in the structure is linked to its neighboring elements.
		The elements can be accessed in a single run as they are arranged linearly.
		eg.array, linked list, stack, queue, hash tables.
		
		Array:The array is a type of data structure that stores elements of the same type in contiguous memory.
		
		Linked List:Linked lists are the types where the data is stored in the form of nodes which consist of an element of data and a pointer. 
		The use of the pointer is that it points or directs to the node which is next to the element in the sequence. 
		The data stored in a linked list might be of any form, strings, numbers, or characters.
		Both sorted and unsorted data can be stored in a linked list along with unique or duplicate elements.
		
		Stack:The data structure follows the rule of LIFO (Last In-First Out) where the data last added element is removed first.
		Push operation is used for adding an element of data on a stack and the pop operation is used for deleting the data from the stack.
		
		Queue:This structure is almost similar to the stack as the data is stored sequentially.
		The difference is that the queue data structure follows FIFO which is the rule of First In-First Out. 
		Front and rear are the two terms to be used in a queue.
		Enqueue is the insertion operation and dequeue is the deletion operation.
		
		Hash Tables: These types can be implemented as linear or non-linear data structures. The data structures consist of key-value pairs.
		
    Non-linear data structure:These data structures don’t follow linearity. The data are arranged in a manner that doesn’t follow the contiguous manner.
	The elements don’t have a set path to connect to the other elements but have multiple paths.
	eg. Trees, Graphs.
	
	Trees:A tree data structure consists of various nodes linked together. 
	The structure of a tree is hierarchical that forms a relationship like that of the parent and a child. 
	eg. Binary Tree, Binary serach tree.
	
	Graph:Graphs are those types of non-linear data structures which consist of a definite quantity of vertices and edges.
	The vertices or the nodes are involved in storing data and the edges show the vertices relationship.

